@syntax owiki
@title Documentation
@keywords OxyPlot,Documentation

== API Documentation

The API documentation is the reference to all namespaces and types of the library. 
The documentation is provided [http://oxyplot.org/doc|online] (html) and as a [http://oxyplot.org/doc/oxyplot.chm|compiled help file] (chm).

The API documentation is generated from XML comments in the code. All methods and properties should be documented in compliance with the StyleCop rules. 

Namespaces are documented in `NamespaceDoc.cs` files.

The library as a whole is documented in the `LibraryDoc.cs` file. The content of this file is shown on the index page of the API documentation.

Currently, include files are not used in the XML comments, but this should be considered if documentation gets longer...

The API Documentation is generated by the `XmlDocT`. This tool converts the .dll and .xml files to .html and also create a help contents file (.hhc) for the help compiler.  XmlDocT is a part of the [http://lynx.codeplex.com|Lynx toolkit] and can be found in the `Tools\Lynx` folder

The Microsoft Help Compiler is used to build the .chm file.

The script can be found at `Build\GenerateAPIDocumentation.cmd`


== User's guide

The user's guide contains "hand-written" information about how to use the library. The user's guide is provided online (html) and as a compiled help file (chm). There will also be a printable version (pdf).

=== Syntax

The syntax is based on Markdown, Confluence and Creole. 

The reasons for making a new syntax was:

- make it very easy (and fast) to parse
- strict (no alternative syntax)
- a little more intuitive (hopefully)
- new features

|| Element || Syntax || Description |
| Header | ~= header | As in Creole, but only on the left side |
| Bold | ~**bold~** | As in Creole, no escape needed to write a single * |
| Italic | ~//italic~// | As in Creole |
| Escape character | ~~ | As in Creole (backslash is used a lot) |
| Line breaks | Two spaces| Two spaces at the end of line, as in Markdown|
| Links | ~[url~|text] | Url is required, text is optional|
| Images | ~{source~|alt} | Source is required, alt text is optional|
| Source code (inline)| ~`code~` | As in Markdown |
| Source code (block)| ~`~`~`cs  
c# code  
~`~`~` | As in Markdown, syntax highlighting is supported for cs and xml|
| Include source from file | ~@include | Include the specified document (good for source code) |
| Import and parse a document | ~@import | Import the specified document (paths will be relative to document location)|
| Variables | ~$version | Replace by variable, e.g. version number|
| Ordered list | ~# item| Nested lists are not supported |
| Unordered list | ~- item| Nested lists are not supported |

=== Images

The plots included in the documentation and web pages are generated by a tool in the `Source\Examples\DocumentationExamples\ExampleGenerator` folder.

The example plots will be updated before the documentation is generated at every build.

=== Build

The user's guide is built by the following steps:

# convert all .wiki files to .html files in the `Output` folder by the "WikiT" tool*
# create a .hhc help contents file from the .hhcgen file by the "HhcGen.exe" tool* 
# compile the .hhp help project to .chm file by the Microsoft Help Compiler hhc.exe
# upload to oxyplot.org server by the "FtpUpload" tool*

See the scripts `Build\GenerateDocumentation.cmd` and `Build\UploadDocumentation.cmd`.

* the [http://lynx.codeplex.com|Lynx] tools are provided in the `Tools\Lynx` folder

=== Contributions

Contributions to the documentation should be done the same way as code. Create a [https://oxyplot.codeplex.com/SourceControl/network/create/fork|new fork] and submit a [https://oxyplot.codeplex.com/SourceControl/send/contribution|pull request] when the changes are ready.

To edit the user's guide, it is recommended to use the `Tools\WikiPad.exe` application with the `Documentation\Index.wikiproj` project file. You can launch this application from the `Documentation\EditDocumentation` shortcut.